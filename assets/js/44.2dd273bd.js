(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{156:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),a("p",[t._v("Replication allows multiple copies of a PostgreSQL cluster (called standbys) to be created from a single primary. The standbys are useful for balancing reads and to provide redundancy in case the primary host fails.")]),t._m(1),a("p",[t._v("A new host named pg-standby is created to run the standby.")]),a("p",[t._v("pgBackRest is written in Perl which is included with Debian/Ubuntu by default. Some additional modules must also be installed but they are available as standard packages.")]),t._m(2),a("p",[t._v("Debian/Ubuntu packages for pgBackRest are available at "),a("a",{attrs:{href:"https://www.postgresql.org/download/linux/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("apt.postgresql.org"),a("OutboundLink")],1),t._v(". If they are not provided for your distribution/version it is easy to download the source and install manually.")]),t._m(3),t._m(4),t._m(5),a("p",[t._v("Although most of pgBackRest is written in Perl, the main executable is written in C. This allows certain time-critical commands (like async archive-push) to run more quickly.")]),t._m(6),t._m(7),a("p",[t._v("pgBackRest requires trusted (no password) SSH to enable communication between the hosts.")]),t._m(8),a("p",[t._v("Exchange keys between repository and pg-standby.")]),t._m(9),t._m(10),a("p",[t._v("Test that connections can be made from repository to pg-standby and vice versa.")]),t._m(11),t._m(12),t._m(13),a("p",[t._v("A hot standby performs replication using the WAL archive and allows read-only queries.\npgBackRest configuration is very similar to pg-primary except that the standby_mode setting will be enabled to keep the cluster in recovery mode when the end of the WAL stream has been reached.")]),t._m(14),a("p",[t._v("The demo cluster must be created (even though it will be overwritten restore) in order to create the PostgreSQL configuration files.")]),t._m(15),a("p",[t._v("Now the standby can be created with the restore command.")]),t._m(16),t._m(17),t._m(18),t._m(19),t._m(20),a("p",[t._v("The PostgreSQL log gives valuable information about the recovery. Note especially that the cluster has entered standby mode and is ready to accept read-only connections.")]),t._m(21),a("p",[t._v("An easy way to test that replication is properly configured is to create a table on pg-primary.")]),t._m(22),a("p",[t._v("And then query the same table on pg-standby.")]),t._m(23),a("p",[t._v("So, what went wrong? Since PostgreSQL is pulling WAL segments from the archive to perform replication, changes won't be seen on the standby until the WAL segment that contains those changes is pushed from pg-primary.")]),t._m(24),t._m(25),a("p",[t._v("Now after a short delay the table will appear on pg-standby.")]),t._m(26),a("p",[t._v("Check the standby configuration for access to the repository.")]),t._m(27),t._m(28),a("p",[t._v("Instead of relying solely on the WAL archive, streaming replication makes a direct connection to the primary and applies changes as soon as they are made on the primary. This results in much less lag between the primary and standby.")]),a("p",[t._v("Streaming replication requires a user with the replication privilege.")]),t._m(29),t._m(30),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),a("p",[t._v("Now the standby can be created with the restore command.")]),t._m(36),t._m(37),a("p",[t._v("The PostgreSQL log will confirm that streaming replication has started.")]),t._m(38),t._m(39),t._m(40),t._m(41)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"replication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replication","aria-hidden":"true"}},[this._v("#")]),this._v(" Replication")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation","aria-hidden":"true"}},[this._v("#")]),this._v(" Installation")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pg-standby ⇒ Install required Perl packages\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" libdbd-pg-perl libio-socket-ssl-perl libxml-libxml-perl\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Download version 2.02 of pgBackRest")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("wget")]),t._v(" -q -O - \\\n       https://github.com/pgbackrest/pgbackrest/archive/release/2.02.tar.gz "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" \\\n       "),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("tar")]),t._v(" zx -C /root\npg-standby ⇒ Install pgBackRest\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r /root/pgbackrest-release-2.02/lib/pgBackRest \\\n       /usr/share/perl5\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" /usr/share/perl5/pgBackRest -type f -exec "),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 644 "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" +\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" /usr/share/perl5/pgBackRest -type d -exec "),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 755 "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" +\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -m 770 /var/log/pgbackrest\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("chown")]),t._v(" postgres:postgres /var/log/pgbackrest\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /etc/pgbackrest\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /etc/pgbackrest/conf.d\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("touch")]),t._v(" /etc/pgbackrest/pgbackrest.conf\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 640 /etc/pgbackrest/pgbackrest.conf\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("chown")]),t._v(" postgres:postgres /etc/pgbackrest/pgbackrest.conf\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("pgBackRest requires a companion C library that enhances performance and enables the "),s("code",[this._v("checksum-page")]),this._v(" option and encryption. Pre-built packages are generally a better option than building the C library manually but the steps required are given below for completeness. Depending on the distribution a number of packages may be required which will not be enumerated here.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Build and Install C Library")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" sh -c "),a("span",{attrs:{class:"token string"}},[t._v("'cd /root/pgbackrest-release-2.02/libc && \\\n       perl Makefile.PL INSTALLMAN1DIR=none INSTALLMAN3DIR=none'")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make")]),t._v(" -C /root/pgbackrest-release-2.02/libc "),a("span",{attrs:{class:"token function"}},[t._v("test")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make")]),t._v(" -C /root/pgbackrest-release-2.02/libc "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Build and Install Binary")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make")]),t._v(" -C /root/pgbackrest-release-2.02/src\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("make")]),t._v(" -C /root/pgbackrest-release-2.02/src "),a("span",{attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"setup-trusted-ssh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-trusted-ssh","aria-hidden":"true"}},[this._v("#")]),this._v(" Setup Trusted SSH")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Create pg-standby host key pair")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -m 750 -p /home/postgres/.ssh\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres ssh-keygen -f /home/postgres/.ssh/id_rsa \\\n       -t rsa -b 4096 -N "),a("span",{attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# repository ⇒ Copy pg-standby public key to repository")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@pg-standby "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /home/postgres/.ssh/id_rsa.pub "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" \\\n       "),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u pgbackrest "),a("span",{attrs:{class:"token function"}},[t._v("tee")]),t._v(" -a /home/pgbackrest/.ssh/authorized_keys\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Copy repository public key to pg-standby")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@repository "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /home/pgbackrest/.ssh/id_rsa.pub "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" \\\n       "),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("tee")]),t._v(" -a /home/postgres/.ssh/authorized_keys\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# repository ⇒ Test connection from repository to pg-standby")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" -u pgbackrest "),s("span",{attrs:{class:"token function"}},[this._v("ssh")]),this._v(" postgres@pg-standby\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# pg-standby ⇒ Test connection from pg-standby to repository")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" -u postgres "),s("span",{attrs:{class:"token function"}},[this._v("ssh")]),this._v(" pgbackrest@repository\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"hot-standby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hot-standby","aria-hidden":"true"}},[this._v("#")]),this._v(" Hot Standby")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# pg-standby:/etc/pgbackrest/pgbackrest.conf ⇒ Configure pgBackRest on the standby\n"),a("span",{attrs:{class:"token selector"}},[t._v("[demo]")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("pg1-path")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("recovery-option")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("standby_mode=on")]),t._v("\n\n"),a("span",{attrs:{class:"token selector"}},[t._v("[global]")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("log-level-file")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("detail")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("repo1-host")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("repository")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("pg-standby ⇒ Create demo cluster\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" pg_createcluster 9.4 demo\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Restore the demo standby cluster")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --delta restore\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/lib/postgresql/9.4/demo/recovery.conf\nstandby_mode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'on'")]),t._v("\nrestore_command "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'pgbackrest --stanza=demo archive-get %f \"%p\"'")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("Note that the standby_mode setting has been written into the "),a("code",[t._v("recovery.conf")]),t._v(" file. Configuring recovery settings in pgBackRest means that the "),a("code",[t._v("recovery.conf")]),t._v(" file does not need to be stored elsewhere since it will be properly recreated with each restore. The "),a("code",[t._v("--type=preserve")]),t._v(" option can be used with the restore to leave the existing "),a("code",[t._v("recovery.conf")]),t._v(" file in place if that behavior is preferred.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("code",[this._v("hot_standby")]),this._v(" setting must be enabled before starting PostgreSQL to allow read-only connections on pg-standby. Otherwise, connection attempts will be refused.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# pg-standby:/etc/postgresql/9.4/demo/postgresql.conf ⇒ Enable hot_standby and configure logging\n"),a("span",{attrs:{class:"token constant"}},[t._v("hot_standby")]),t._v(" "),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" on")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("log_filename")]),t._v(" "),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" 'postgresql.log'")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("log_line_prefix")]),t._v(" "),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" ''")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# pg-standby ⇒ Start PostgreSQL")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" pg_ctlcluster 9.4 demo start\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Examine the PostgreSQL log output for log messages indicating success")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/log/postgresql/postgresql-9.4-demo.log\nLOG:  could not bind IPv6 socket: Cannot assign requested address\nHINT:  Is another postmaster already running on port 5432? If not, "),a("span",{attrs:{class:"token function"}},[t._v("wait")]),t._v(" a few seconds and retry.\nLOG:  database system was interrupted"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" last known up at 2018-05-06 15:20:15 UTC\nLOG:  entering standby mode\nLOG:  restored log "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"00000008.history"')]),t._v(" from archive\nLOG:  incomplete startup packet\nLOG:  restored log "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"000000080000000000000023"')]),t._v(" from archive\nLOG:  redo starts at 0/23000028\nLOG:  consistent recovery state reached at 0/230000F0\nLOG:  database system is ready to accept "),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" only connections\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Create a new table on the primary")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v("\" \\\n       begin; \\\n       create table replicated_table (message text); \\\n       insert into replicated_table values ('Important Data'); \\\n       commit; \\\n       select * from replicated_table\"")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    message\n----------------\n Important Data\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 row"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Query new table on the standby")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v('"select * from replicated_table;"')]),t._v("\nERROR:  relation "),a("span",{attrs:{class:"token string"}},[t._v('"replicated_table"')]),t._v(" does not exist\nLINE 1: "),a("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" * from replicated_table"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                      ^\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("This can be done manually by calling "),s("code",[this._v("pg_switch_xlog()")]),this._v(" which pushes the current WAL segment to the archive (a new WAL segment is created to contain further changes).")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Call pg_switch_xlog()")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v('"select *, current_timestamp from pg_switch_xlog()"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n pg_switch_xlog "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("              now              \n----------------+-------------------------------\n 0/24019A60     "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" 2018-05-06 15:20:56.974643+00\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 row"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Now the new table exists on the standby (may require a few retries)")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v('" \\\n       select *, current_timestamp from replicated_table"')]),t._v("\n    message     "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("              now              \n----------------+-------------------------------\n Important Data "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" 2018-05-06 15:20:59.232628+00\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 row"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Check the configuration")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --log-level-console"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("info check\nP00   INFO: check "),a("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin 2.02: --log-level-console"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("info --log-level-file"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("detail --log-level-stderr"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("off --no-log-timestamp --pg1-path"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo --repo1-host"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("repository --stanza"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo\nP00   INFO: switch xlog cannot be performed on the standby, all other checks passed successfully\nP00   INFO: check "),a("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"streaming-replication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#streaming-replication","aria-hidden":"true"}},[this._v("#")]),this._v(" Streaming Replication")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# pg-primary ⇒ Create replication user")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" -u postgres psql -c "),s("span",{attrs:{class:"token string"}},[this._v("\" \\\n       create user replicator password 'jw8s0F4' replication\"")]),s("span",{attrs:{class:"token punctuation"}},[this._v(";")]),this._v("\nCREATE ROLE\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The "),s("code",[this._v("pg_hba.conf")]),this._v(" file must be updated to allow the standby to connect as the replication user. Be sure to replace the IP address below with the actual IP address of your pg-primary. A reload will be required after modifying the "),s("code",[this._v("pg_hba.conf")]),this._v(" file.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Create pg_hba.conf entry for replication user")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres sh -c "),a("span",{attrs:{class:"token string"}},[t._v("'echo \\\n       \"host    replication     replicator      172.17.0.5/32           md5\" \\\n       >> /etc/postgresql/9.4/demo/pg_hba.conf'")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" pg_ctlcluster 9.4 demo reload\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("The standby needs to know how to contact the primary so the "),s("code",[this._v("primary_conninfo")]),this._v(" setting will be configured in pgBackRest.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# pg-standby:/etc/pgbackrest/pgbackrest.conf ⇒ Set primary_conninfo\n"),a("span",{attrs:{class:"token selector"}},[t._v("[demo]")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("pg1-path")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("recovery-option")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("standby_mode=on")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("recovery-option")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("primary_conninfo=host=172.17.0.3 port=5432 user=replicator")]),t._v("\n\n"),a("span",{attrs:{class:"token selector"}},[t._v("[global]")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("log-level-file")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("detail")]),t._v("\n"),a("span",{attrs:{class:"token constant"}},[t._v("repo1-host")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("repository")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("It is possible to configure a password in the primary_conninfo setting but using a "),s("code",[this._v(".pgpass")]),this._v(" file is more flexible and secure.")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Configure the replication password in the .pgpass file.")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres sh -c "),a("span",{attrs:{class:"token string"}},[t._v("'echo \\\n       \"172.17.0.3:*:replication:replicator:jw8s0F4\" \\\n       >> /home/postgres/.pgpass'")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("chmod")]),t._v(" 600 /home/postgres/.pgpass\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Stop PostgreSQL and restore the demo standby cluster")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" pg_ctlcluster 9.4 demo stop\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --delta restore\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/lib/postgresql/9.4/demo/recovery.conf\nprimary_conninfo "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'host=172.17.0.3 port=5432 user=replicator'")]),t._v("\nstandby_mode "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'on'")]),t._v("\nrestore_command "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'pgbackrest --stanza=demo archive-get %f \"%p\"'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[this._v("# pg-standby ⇒ Start PostgreSQL")]),this._v("\n"),s("span",{attrs:{class:"token function"}},[this._v("sudo")]),this._v(" pg_ctlcluster 9.4 demo start\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Examine the PostgreSQL log output for log messages indicating success")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres "),a("span",{attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/log/postgresql/postgresql-9.4-demo.log\n       "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 9 lines of output"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nLOG:  database system is ready to accept "),a("span",{attrs:{class:"token function"}},[t._v("read")]),t._v(" only connections\nLOG:  restored log "),a("span",{attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"000000080000000000000024"')]),t._v(" from archive\nLOG:  started streaming WAL from primary at 0/25000000 on timeline 8\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Now when a table is created on pg-primary it will appear on pg-standby quickly and without the need to call "),s("code",[this._v("pg_switch_xlog()")]),this._v(".")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Create a new table on the primary")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v("\" \\\n       begin; \\\n       create table stream_table (message text); \\\n       insert into stream_table values ('Important Data'); \\\n       commit; \\\n       select *, current_timestamp from stream_table\"")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    message     "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("             now\n----------------+------------------------------\n Important Data "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" 2018-05-06 15:21:11.41956+00\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 row"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("# pg-standby ⇒ Query table on the standby")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres psql -c "),a("span",{attrs:{class:"token string"}},[t._v('" \\\n       select *, current_timestamp from stream_table"')]),t._v("\n    message     "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("              now\n----------------+-------------------------------\n Important Data "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" 2018-05-06 15:21:11.711161+00\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 row"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])}],!1,null,null,null);s.default=n.exports}}]);