(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{201:function(e,a,o){"use strict";o.r(a);var r=o(0),l=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,o=e._self._c||a;return o("div",{staticClass:"content"},[o("h1",{attrs:{id:"log-options"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-options","aria-hidden":"true"}},[e._v("#")]),e._v(" Log Options")]),o("h2",{attrs:{id:"log-level-console"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-level-console","aria-hidden":"true"}},[e._v("#")]),e._v(" --log-level-console")]),o("p",[e._v("Level for console logging.")]),o("p",[e._v("The following log levels are supported:")]),o("ul",[o("li",[o("code",[e._v("off")]),e._v(" - No logging at all (not recommended)")]),o("li",[o("code",[e._v("error")]),e._v(" - Log only errors")]),o("li",[o("code",[e._v("warn")]),e._v(" - Log warnings and errors")]),o("li",[o("code",[e._v("info")]),e._v(" - Log info, warnings, and errors")]),o("li",[o("code",[e._v("detail")]),e._v(" - Log detail, info, warnings, and errors")]),o("li",[o("code",[e._v("debug")]),e._v(" - Log debug, detail, info, warnings, and errors")]),o("li",[o("code",[e._v("trace")]),e._v(" - Log trace (very verbose debugging), debug, info, warnings, and errors")])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("default: warn\nexample: --log-level-console=error\n")])])]),o("h2",{attrs:{id:"log-level-file"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-level-file","aria-hidden":"true"}},[e._v("#")]),e._v(" --log-level-file")]),o("p",[e._v("Level for file logging.")]),o("p",[e._v("The following log levels are supported:")]),o("ul",[o("li",[o("code",[e._v("off")]),e._v(" - No logging at all (not recommended)")]),o("li",[o("code",[e._v("error")]),e._v(" - Log only errors")]),o("li",[o("code",[e._v("warn")]),e._v(" - Log warnings and errors")]),o("li",[o("code",[e._v("info")]),e._v(" - Log info, warnings, and errors")]),o("li",[o("code",[e._v("detail")]),e._v(" - Log detail, info, warnings, and errors")]),o("li",[o("code",[e._v("debug")]),e._v(" - Log debug, detail, info, warnings, and errors")]),o("li",[o("code",[e._v("trace")]),e._v(" - Log trace (very verbose debugging), debug, info, warnings, and errors")])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("default: info\nexample: --log-level-file=debug\n")])])]),o("h2",{attrs:{id:"log-level-stderr"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-level-stderr","aria-hidden":"true"}},[e._v("#")]),e._v(" --log-level-stderr")]),o("p",[e._v("Level for stderr logging.")]),o("p",[e._v("Specifies which log levels will output to stderr rather than stdout (specified by "),o("code",[e._v("log-level-console")]),e._v("). The timestamp and process will not be output to stderr.")]),o("p",[e._v("The following log levels are supported:")]),o("ul",[o("li",[o("code",[e._v("off")]),e._v(" - No logging at all (not recommended)")]),o("li",[o("code",[e._v("error")]),e._v(" - Log only errors")]),o("li",[o("code",[e._v("warn")]),e._v(" - Log warnings and errors")]),o("li",[o("code",[e._v("info")]),e._v(" - Log info, warnings, and errors")]),o("li",[o("code",[e._v("detail")]),e._v(" - Log detail, info, warnings, and errors")]),o("li",[o("code",[e._v("debug")]),e._v(" - Log debug, detail, info, warnings, and errors")]),o("li",[o("code",[e._v("trace")]),e._v(" - Log trace (very verbose debugging), debug, info, warnings, and errors")])]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("default: warn\nexample: --log-level-stderr=error\n")])])]),o("h2",{attrs:{id:"log-path"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-path","aria-hidden":"true"}},[e._v("#")]),e._v(" --log-path")]),o("p",[e._v("Path where log files are stored.")]),o("p",[e._v("The log path provides a location for pgBackRest to store log files. Note that if log-level-file=none then no log path is required.")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("default: /var/log/pgbackrest\nexample: --log-path=/backup/db/log\n")])])]),o("h2",{attrs:{id:"log-timestamp"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#log-timestamp","aria-hidden":"true"}},[e._v("#")]),e._v(" --log-timestamp")]),o("p",[e._v("Enable timestamp in logging.")]),o("p",[e._v("Enables the timestamp in console and file logging. This option is disabled in special situations such as generating documentation.")]),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("default: y\nexample: --no-log-timestamp\n")])])])])}],!1,null,null,null);a.default=l.exports}}]);