(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{154:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"retention"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retention","aria-hidden":"true"}},[t._v("#")]),t._v(" Retention")]),s("p",[t._v("Generally it is best to retain as many backups as possible to provide a greater window for Point-in-Time Recovery, but practical concerns such as disk space must also be considered. Retention options remove older backups once they are no longer needed.")]),s("h2",{attrs:{id:"full-backup-retention"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#full-backup-retention","aria-hidden":"true"}},[t._v("#")]),t._v(" Full Backup Retention")]),s("p",[t._v("Set "),s("code",[t._v("repo1-retention-full")]),t._v(" to the number of full backups required. New backups must be completed before expiration will occur — that means if repo1-retention-full=2 then there will be three full backups stored before the oldest one is expired.")]),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("# pg-primary:/etc/pgbackrest/pgbackrest.conf ⇒ Configure repo1-retention-full\n"),s("span",{attrs:{class:"token selector"}},[t._v("[demo]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("pg1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-pass")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-type")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("aes-256-cbc")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/pgbackrest")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-retention-full")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("start-fast")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("stop-auto")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global:archive-push]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("compress-level")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3")]),t._v("\n")])])]),s("p",[t._v("Backup "),s("code",[t._v("repo1-retention-full=2")]),t._v(" but currently there is only one full backup so the next full backup to run will not expire any full backups.")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Perform a full backup")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("full \\\n       --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("detail backup\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 763 lines of output"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nP00   INFO: backup "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin\nP00 DETAIL: archive retention on backup 20180506-151611F, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000010000000000000002\nP00 DETAIL: no archive to remove, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\n")])])]),s("p",[t._v("Archive is expired because WAL segments were generated before the oldest backup. These are not useful for recovery — only WAL segments generated after a backup can be used to recover that backup.")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Perform a full backup")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("full \\\n       --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("info backup\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 763 lines of output"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nP00   INFO: backup "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin\nP00   INFO: expire full backup set: 20180506-151611F, 20180506-151611F_20180506-151616D, 20180506-151611F_20180506-151632I, 20180506-151611F_20180506-151637I, 20180506-151611F_20180506-151645I\nP00   INFO: remove expired backup 20180506-151611F_20180506-151645I\nP00   INFO: remove expired backup 20180506-151611F_20180506-151637I\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 3 lines of output"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("20180506-151611F")]),t._v(" full backup is expired and archive retention is based on the "),s("code",[t._v("20180506-151655F")]),t._v(" which is now the oldest full backup.")]),s("h2",{attrs:{id:"differential-backup-retention"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#differential-backup-retention","aria-hidden":"true"}},[t._v("#")]),t._v(" Differential Backup Retention")]),s("p",[t._v("Set "),s("code",[t._v("repo1-retention-diff")]),t._v(" to the number of differential backups required. Differentials only rely on the prior full backup so it is possible to create a rolling set of differentials for the last day or more. This allows quick restores to recent points-in-time but reduces overall space consumption.")]),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("# pg-primary:/etc/pgbackrest/pgbackrest.conf ⇒ Configure repo1-retention-diff\n"),s("span",{attrs:{class:"token selector"}},[t._v("[demo]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("pg1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-pass")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-type")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("aes-256-cbc")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/pgbackrest")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-retention-diff")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-retention-full")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("start-fast")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("stop-auto")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global:archive-push]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("compress-level")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3")]),t._v("\n")])])]),s("p",[t._v("Backup "),s("code",[t._v("repo1-retention-diff=1")]),t._v(" so two differentials will need to be performed before one is expired. An incremental backup is added to demonstrate incremental expiration. Incremental backups cannot be expired independently — they are always expired with their related full or differential backup.")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Perform differential and incremental backups")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("diff backup\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("incr backup\n")])])]),s("p",[t._v("Now performing a differential backup will expire the previous differential and incremental backups leaving only one differential backup.")]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Perform a differential backup")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("diff \\\n       --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("info backup\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 10 lines of output"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nP00   INFO: backup "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("diff")]),t._v(" backup set: 20180506-151702F_20180506-151709D, 20180506-151702F_20180506-151714I\nP00   INFO: remove expired backup 20180506-151702F_20180506-151714I\nP00   INFO: remove expired backup 20180506-151702F_20180506-151709D\n")])])]),s("h2",{attrs:{id:"archive-retention"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#archive-retention","aria-hidden":"true"}},[t._v("#")]),t._v(" Archive Retention")]),s("p",[t._v("Although pgBackRest automatically removes archived WAL segments when expiring backups (the default expires WAL for full backups based on the repo1-retention-full option), it may be useful to expire archive more aggressively to save disk space. Note that full backups are treated as differential backups for the purpose of differential archive retention.")]),s("p",[t._v("Expiring archive will never remove WAL segments that are required to make a backup consistent. However, since Point-in-Time-Recovery (PITR) only works on a continuous WAL stream, care should be taken when aggressively expiring archive outside of the normal backup expiration process.")]),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("# pg-primary:/etc/pgbackrest/pgbackrest.conf ⇒ Configure repo1-retention-diff\n"),s("span",{attrs:{class:"token selector"}},[t._v("[demo]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("pg1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/postgresql/9.4/demo")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-pass")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("zWaf6XtpjIVZC5444yXB+cgFDFl7MxGlgkZSaoPvTGirhPygu4jOKOXf9LO4vjfO")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-cipher-type")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("aes-256-cbc")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-path")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/var/lib/pgbackrest")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-retention-diff")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("repo1-retention-full")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("2")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("start-fast")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("stop-auto")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("y")]),t._v("\n\n"),s("span",{attrs:{class:"token selector"}},[t._v("[global:archive-push]")]),t._v("\n"),s("span",{attrs:{class:"token constant"}},[t._v("compress-level")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Perform differential backup")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("diff \\\n       --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("info backup\n       "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filtered 7 lines of output"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nP00   INFO: execute exclusive pg_stop_backup"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and "),s("span",{attrs:{class:"token function"}},[t._v("wait")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all WAL segments to archive\nP00   INFO: backup stop archive "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000014, lsn "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0/140000F0\nP00   INFO: new backup label "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 20180506-151702F_20180506-151724D\nP00   INFO: backup "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# pg-primary ⇒ Expire archive")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u postgres pgbackrest --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("detail \\\n       --repo1-retention-archive-type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("diff --repo1-retention-archive"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("1 expire\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" begin 2.02: --log-level-console"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("detail --log-level-stderr"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("off --no-log-timestamp --repo1-cipher-pass"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" --repo1-cipher-type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("aes-256-cbc --repo1-path"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/pgbackrest --repo1-retention-archive"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("1 --repo1-retention-archive-type"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("diff --repo1-retention-diff"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("2 --repo1-retention-full"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("2 --stanza"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("demo\nP00 DETAIL: archive retention on backup 20180506-151655F, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000B, stop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000B\nP00 DETAIL: archive retention on backup 20180506-151702F, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000C, stop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000C\nP00 DETAIL: archive retention on backup 20180506-151702F_20180506-151718D, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000010, stop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000010\nP00 DETAIL: archive retention on backup 20180506-151702F_20180506-151724D, archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000014\nP00 DETAIL: remove archive: archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000D, stop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 00000002000000000000000F\nP00 DETAIL: remove archive: archiveId "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 9.4-1, start "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000011, stop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 000000020000000000000013\nP00   INFO: expire "),s("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" end: completed successfully\n")])])]),s("p",[t._v("The "),s("code",[t._v("20180506-151702F_20180506-151718D")]),t._v(" differential backup has archived WAL segments that must be retained to make the older backups consistent even though they cannot be played any further forward with PITR. WAL segments generated after "),s("code",[t._v("20180506-151702F_20180506-151718D")]),t._v(" but before "),s("code",[t._v("20180506-151702F_20180506-151724D")]),t._v(" are removed. WAL segments generated after the new backup "),s("code",[t._v("20180506-151702F_20180506-151724D")]),t._v(" remain and can be used for PITR.")]),s("p",[t._v("Since full backups are considered differential backups for the purpose of differential archive retention, if a full backup is now performed with the same settings, only the archive for that full backup is retained for PITR.")])])}],!1,null,null,null);a.default=n.exports}}]);