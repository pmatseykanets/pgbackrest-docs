(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{177:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"starting-and-stopping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starting-and-stopping","aria-hidden":"true"}},[s._v("#")]),s._v(" Starting And Stopping")]),a("p",[s._v("Sometimes it is useful to prevent pgBackRest from running on a system. For example, when failing over from a primary to a standby it's best to prevent pgBackRest from running on the old primary in case PostgreSQL gets restarted or can't be completely killed. This will also prevent pgBackRest from running on cron.")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# pg-primary ⇒ Stop the pgBackRest services")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u postgres pgbackrest stop\n")])])]),a("p",[s._v("New pgBackRest processes will no longer run.")]),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# repository ⇒ Attempt a backup")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u pgbackrest pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("demo backup\nP00  ERROR: "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("062"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": raised from remote process on "),a("span",{attrs:{class:"token string"}},[s._v("'pg-primary'")]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" stop "),a("span",{attrs:{class:"token function"}},[s._v("file")]),s._v(" exists "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all stanzas\n")])])]),a("p",[s._v("Specify the "),a("code",[s._v("--force")]),s._v(" option to terminate any pgBackRest process that are currently running. If pgBackRest is already stopped then stopping again will generate a warning.")]),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# pg-primary ⇒ Stop the pgBackRest services again")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u postgres pgbackrest stop\nP00   WARN: stop "),a("span",{attrs:{class:"token function"}},[s._v("file")]),s._v(" already exists "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" all stanzas\n")])])]),a("p",[s._v("Start pgBackRest processes again with the start command.")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# pg-primary ⇒ Start the pgBackRest services")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u postgres pgbackrest start\n")])])]),a("p",[s._v("It is also possible to stop pgBackRest for a single stanza.")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# pg-primary ⇒ Stop pgBackRest services for the demo stanza")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u postgres pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("demo stop\n")])])]),a("p",[s._v("New pgBackRest processes for the specified stanza will no longer run.")]),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# repository ⇒ Attempt a backup")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u pgbackrest pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("demo backup\nP00  ERROR: "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("062"),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": raised from remote process on "),a("span",{attrs:{class:"token string"}},[s._v("'pg-primary'")]),a("span",{attrs:{class:"token keyword"}},[s._v(":")]),s._v(" stop "),a("span",{attrs:{class:"token function"}},[s._v("file")]),s._v(" exists "),a("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" stanza demo\n")])])]),a("p",[s._v("The stanza must also be specified when starting the pgBackRest processes for a single stanza.")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v("# pg-primary ⇒ Start the pgBackRest services for the demo stanza")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -u postgres pgbackrest --stanza"),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v("demo start\n")])])])])}],!1,null,null,null);t.default=n.exports}}]);